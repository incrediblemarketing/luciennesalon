/* -------------------------------------------------- */
/* BREAKPOINTS
/* -------------------------------------------------- */

$breakpoint-keys: map-keys($breakpoints);
$breakpoint-values: map-values($breakpoints);

$mobile: nth($breakpoint-values, 1);
$tablet: nth($breakpoint-values, 2);
$laptop: nth($breakpoint-values, 3);
$desktop: nth($breakpoint-values, 4);


/* -------------------------------------------------- */
/* COLORS
/* -------------------------------------------------- */

$primary: map-get($colors, primary);
$secondary: map-get($colors, secondary);
$accent: map-get($colors, accent);

$white: map-get($colors, white);
$light-gray: map-get($colors, light-gray);
$gray: map-get($colors, gray);
$dark-gray: map-get($colors, dark-gray);
$charcoal: map-get($colors, charcoal);
$black: map-get($colors, black);

$ok: map-get($colors, ok);
$warning: map-get($colors, warning);
$error: map-get($colors, error);

$shadow: map-get($colors, shadow);

$transparent: map-get($colors, transparent);


/* -------------------------------------------------- */
/* TYPOGRAPHY
/* -------------------------------------------------- */

//font: font-style font-variant font-weight font-size/line-height font-family;
$headline:	map-get(map-get($fonts, headline), style)
			map-get(map-get($fonts, headline), variant)
			map-get(map-get($fonts, headline), weight)
			map-get(map-get($fonts, headline), size)unquote('/')map-get(map-get($fonts, headline), line-height)
			map-get(map-get($fonts, headline), family);

$subheadline:	map-get(map-get($fonts, subheadline), style)
				map-get(map-get($fonts, subheadline), variant)
				map-get(map-get($fonts, subheadline), weight)
				map-get(map-get($fonts, subheadline), size)unquote('/')map-get(map-get($fonts, subheadline), line-height)
				map-get(map-get($fonts, subheadline), family);

$copy:	map-get(map-get($fonts, copy), style)
		map-get(map-get($fonts, copy), variant)
		map-get(map-get($fonts, copy), weight)
		map-get(map-get($fonts, copy), size)unquote('/')100%
		map-get(map-get($fonts, copy), family);

$font-stack:	map-get(map-get($fonts, stack), style)
				map-get(map-get($fonts, stack), variant)
				map-get(map-get($fonts, stack), weight)
				map-get(map-get($fonts, stack), size)unquote('/')100%
				map-get(map-get($fonts, stack), family);

$font-icon: map-get(map-get($fonts, icon), family);
$font-icon-brand: map-get(map-get($fonts, icon), brand);


/* -------------------------------------------------- */
/* GUTTERS (MARGINS / PADDING)
/* -------------------------------------------------- */

$gutter-xs: map-get($gutters, xs);
$gutter-sm: map-get($gutters, sm);
$gutter-md: map-get($gutters, md);
$gutter-lg: map-get($gutters, lg);
$gutter-xl: map-get($gutters, xl);
$gutter: map-get($gutters, global);


/* -------------------------------------------------- */
/* SIZES
/* -------------------------------------------------- */

// WIDTHS
$width-xs: map-get($widths, xs);
$width-sm: map-get($widths, sm);
$width-md: map-get($widths, md);
$width-lg: map-get($widths, lg);
$width-xl: map-get($widths, xl);
$width: map-get($section, width);


// HEIGHTS
$height-xs: map-get($heights, xs);
$height-sm: map-get($heights, sm);
$height-md: map-get($heights, md);
$height-lg: map-get($heights, lg);
$height-xl: map-get($heights, xl);


/* -------------------------------------------------- */
/* EFFECTS
/* -------------------------------------------------- */

// Usually set as the default state of an element.
$box-shadow-light:	0 1px 4px 0 rgba($shadow, 0.12),
					0 1px 2px 0 rgba($shadow, 0.24);

$text-shadow-light: 3px 3px 1px rgba($shadow, 1);


// Generally used for 'hover' states.
$box-shadow-strong: 0 5px 15px 0 rgba($shadow, 0.35),
					0 25px 35px 0 rgba($shadow, 0.2);

$text-shadow-strong: 5px 5px 4px rgba($shadow, 0.75);


/* -------------------------------------------------- */
/* EASINGS
/* -------------------------------------------------- */

$easeInSine: cubic-bezier(0.47, 0, 0.745, 0.715);
$easeOutSine: cubic-bezier(0.39, 0.575, 0.565, 1);
$easeInOutSine: cubic-bezier(0.39, 0.575, 0.565, 1);

$easeInQuad: cubic-bezier(0.55, 0.085, 0.68, 0.53);
$easeOutQuad: cubic-bezier(0.25, 0.46, 0.45, 0.94);
$easeInOutQuad: cubic-bezier(0.25, 0.46, 0.45, 0.94);

$easeInCubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);
$easeOutCubic: cubic-bezier(0.215, 0.61, 0.355, 1);
$easeInOutCubic: cubic-bezier(0.215, 0.61, 0.355, 1);

$easeInQuart: cubic-bezier(0.895, 0.03, 0.685, 0.22);
$easeOutQuart: cubic-bezier(0.165, 0.84, 0.44, 1);
$easeInOutQuart: cubic-bezier(0.165, 0.84, 0.44, 1);

$easeInQuint: cubic-bezier(0.755, 0.05, 0.855, 0.06);
$easeOutQuint: cubic-bezier(0.23, 1, 0.32, 1);
$easeInOutQuint: cubic-bezier(0.23, 1, 0.32, 1);

$easeInExpo: cubic-bezier(0.95, 0.05, 0.795, 0.035);
$easeOutExpo: cubic-bezier(0.19, 1, 0.22, 1);
$easeInOutExpo: cubic-bezier(0.19, 1, 0.22, 1);

$easeInCirc: cubic-bezier(0.6, 0.04, 0.98, 0.335);
$easeOutCirc: cubic-bezier(0.075, 0.82, 0.165, 1);
$easeInOutCirc: cubic-bezier(0.075, 0.82, 0.165, 1);

$easeInBack: cubic-bezier(0.6, -0.28, 0.735, 0.045);
$easeOutBack: cubic-bezier(0.175, 0.885, 0.32, 1.275);
$easeInOutBack: cubic-bezier(0.68, -0.55, 0.265, 1.55);

$easeSway: cubic-bezier(0.175, 0.885, 0.320, 1.275);
$easeNatural: cubic-bezier(0.4, 0, 0.2, 1);
$easeNaturalQuick: cubic-bezier(0.51, 0.92, 0.24, 1.15);
$easeWipe: cubic-bezier(1, 0, 0, 1);
$easeWipeQuick: cubic-bezier(0.75, 0, 0, 1);


/*
@debug 'Shortcut map tests:';
@debug $h1 $p4;
@debug $primary;
@debug $mobile;
@debug $gutter-xs;
*/
