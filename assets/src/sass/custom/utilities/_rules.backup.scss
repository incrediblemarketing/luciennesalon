/* -------------------------------------------------- */
/* OVERFLOW
/* -------------------------------------------------- */

.overflow {

	&-auto {

		@include breakpoint($prefix: '-', $suffix: '') {
			overflow: auto;
		}

	}

	&-hidden {

		@include breakpoint($prefix: '-', $suffix: '') {
			overflow: hidden
		}

	}

	&-scroll {

		@include breakpoint($prefix: '-', $suffix: '') {
			overflow: scroll;
		}

	}

	&-visible {

		@include breakpoint($prefix: '-', $suffix: '') {
			overflow: visible;
		}

	}

	&-x { // -

		@include breakpoint($prefix: '-', $suffix: '') {
			overflow: {
				x: scroll;
				y: hidden;
			}
		}

	}

	&-y { // |

		@include breakpoint($prefix: '-', $suffix: '') {
			overflow: {
				x: hidden;
				y: scroll;
			}
		}

	}

	&-contain {

		@include breakpoint($prefix: '-', $suffix: '') {
			overscroll-behavior: contain;
		}

	}

	&-none {

		@include breakpoint($prefix: '-', $suffix: '') {
			overscroll-behavior: none;
		}

	}

}


/* -------------------------------------------------- */
/* OPACITY
/* -------------------------------------------------- */

@for $i from 0 through 10 {

	.opacity-#{$i} {

		@include breakpoint($prefix: '-', $suffix: '') {
			opacity: $i / 10;
		}

	}

}


/* -------------------------------------------------- */
/* DISPLAY / VISIBILITY
/* -------------------------------------------------- */

.display {

	&-block {

		@include breakpoint($prefix: '-', $suffix: '') {
			display: block;
		}

	}

	&-inline {

		@include breakpoint($prefix: '-', $suffix: '') {
			display: inline;
		}

	}

	&-inline-block {

		@include breakpoint($prefix: '-', $suffix: '') {
			display: inline-block;
		}

	}

}

.hide {

	@include breakpoint($prefix: '-', $suffix: '') {
		display: none !important;
	}

}

.show {

	@include breakpoint($prefix: '-', $suffix: '') {
		display: block;
	}

}

.hidden {

	@include breakpoint($prefix: '-', $suffix: '') {
		visibility: hidden;
	}

}

.visible {

	@include breakpoint($prefix: '-', $suffix: '') {
		visibility: visible;
	}

}


/* -------------------------------------------------- */
/* POSITION
/* -------------------------------------------------- */

.position {

	&-absolute {

		@include breakpoint($prefix: '-', $suffix: '') {
			position: absolute;
		}

	}

	&-fixed {

		@include breakpoint($prefix: '-', $suffix: '') {
			position: fixed;
		}

	}

	&-relative {

		@include breakpoint($prefix: '-', $suffix: '') {
			position: relative;
		}

	}

	&-static {

		@include breakpoint($prefix: '-', $suffix: '') {
			position: static;
		}

	}

	&-sticky {

		@include breakpoint($prefix: '-', $suffix: '') {
			position: sticky;
		}

	}

	&-reset { // Will reset the element position to be part of the normal page flow.

		@include breakpoint($prefix: '-', $suffix: '') {
			position: static;
			top: auto;
			right: auto;
			bottom: auto;
			left: auto;
		}

	}

}


/* -------------------------------------------------- */
/* ALIGNMENT
/* -------------------------------------------------- */

.top {

	@include breakpoint($prefix: '-', $suffix: '') {
		top: 0;
		bottom: auto;
	}

	&-auto {

		@include breakpoint($prefix: '-', $suffix: '') {
			margin-bottom: auto;
		}

	}

}

.right {

	@include breakpoint($prefix: '-', $suffix: '') {
		left: auto;
		right: 0;
	}

	&-auto {

		@include breakpoint($prefix: '-', $suffix: '') {
			margin-left: auto;
		}

	}

}

.bottom {

	@include breakpoint($prefix: '-', $suffix: '') {
		top: auto;
		bottom: 0;
	}

	&-auto {

		@include breakpoint($prefix: '-', $suffix: '') {
			margin-top: auto;
		}

	}

}

.left {

	@include breakpoint($prefix: '-', $suffix: '') {
		left: 0;
		right: auto;
	}

	&-auto {

		@include breakpoint($prefix: '-', $suffix: '') {
			margin-right: auto;
		}

	}

}

.center {

	&-auto { // |

		@include breakpoint($prefix: '-', $suffix: '') {
			margin: {
				left: auto;
				right: auto;
			}
		}

	}

	&-v { // |

		@include breakpoint($prefix: '-', $suffix: '') {
			position: absolute;
			top: 50%;
			bottom: auto;
			transform: translateY(-50%);
		}

	}

	&-h { // -

		@include breakpoint($prefix: '-', $suffix: '') {
			position: absolute;
			left: 50%;
			right: auto;
			transform: translateX(-50%);
		}

	}

	&-vh { // +

		@include breakpoint($prefix: '-', $suffix: '') {
			position: absolute;
			top: 50%;
			right: auto;
			bottom: auto;
			left: 50%;
			transform: translate(-50%, -50%);
		}

	}

}


.float {

	&-left {

		@include breakpoint($prefix: '-', $suffix: '') {
			float: left;
		}

	}

	&-right {

		@include breakpoint($prefix: '-', $suffix: '') {
			float: right;
		}

	}

}

.v-align {

	&-baseline {

		@include breakpoint($prefix: '-', $suffix: '') {
			vertical-align: baseline;
		}

	}

	&-top {

		@include breakpoint($prefix: '-', $suffix: '') {
			vertical-align: top;
		}

	}

	&-middle {

		@include breakpoint($prefix: '-', $suffix: '') {
			vertical-align: middle;
		}

	}

	&-bottom {

		@include breakpoint($prefix: '-', $suffix: '') {
			vertical-align: bottom;
		}

	}

	&-sub {

		@include breakpoint($prefix: '-', $suffix: '') {
			vertical-align: sub;
		}

	}

	&-super {

		@include breakpoint($prefix: '-', $suffix: '') {
			vertical-align: super;
		}

	}

	&-text-top {

		@include breakpoint($prefix: '-', $suffix: '') {
			vertical-align: text-top;
		}

	}

	&-text-bottom {

		@include breakpoint($prefix: '-', $suffix: '') {
			vertical-align: text-bottom;
		}

	}

}


/* -------------------------------------------------- */
/* FLEX
/* -------------------------------------------------- */

// Reference: https://demos.scotch.io/visual-guide-to-css3-flexbox-flexbox-playground/demos


.flex {

	display: flex;
	//flex-flow: row wrap; // flex-direction, flex-wrap
	//align-items: center;
	//justify-content: space-between;

	&-inline {

		@include breakpoint($prefix: '-', $suffix: '') {
			display: inline-flex;
		}

	}

	&-nowrap {

		@include breakpoint($prefix: '-', $suffix: '') {
			flex-wrap: nowrap;
		}

	}

	&-wrap {

		@include breakpoint($prefix: '-', $suffix: '') {
			flex-wrap: wrap;
		}

	}

	&-wrap-reverse {

		@include breakpoint($prefix: '-', $suffix: '') {
			flex-wrap: wrap-reverse;
		}

	}

	&-column {

		@include breakpoint($prefix: '-', $suffix: '') {
			flex-direction: column;
		}

	}

	&-row {

		@include breakpoint($prefix: '-', $suffix: '') {
			flex-direction: row;
		}

	}

	&-column-reverse {

		@include breakpoint($prefix: '-', $suffix: '') {
			flex-direction: column-reverse;
		}

	}

	&-row-reverse {

		@include breakpoint($prefix: '-', $suffix: '') {
			flex-direction: row-reverse;
		}

	}

	&-baseline {

		@include breakpoint($prefix: '-', $suffix: '') {
			align-items: baseline;
		}

	}

	&-top {

		@include breakpoint($prefix: '-', $suffix: '') {
			align-items: flex-start;
		}

	}

	&-right {

		@include breakpoint($prefix: '-', $suffix: '') {
			justify-content: flex-end;
		}

	}

	&-bottom {

		@include breakpoint($prefix: '-', $suffix: '') {
			align-items: flex-end;
		}

	}

	&-left {

		@include breakpoint($prefix: '-', $suffix: '') {
			justify-content: flex-start;
		}

	}

	&-v {

		@include breakpoint($prefix: '-', $suffix: '') {
			align-items: center;
		}

	}

	&-h {

		@include breakpoint($prefix: '-', $suffix: '') {
			justify-content: center;
		}

	}

	&-vh {

		@include breakpoint($prefix: '-', $suffix: '') {
			align-items: center;
			justify-content: center;
		}

	}

	&-around {

		@include breakpoint($prefix: '-', $suffix: '') {
			align-items: space-around;
			justify-content: space-around;
		}

	}

	&-between {

		@include breakpoint($prefix: '-', $suffix: '') {
			align-items: space-between;
			justify-content: space-between;
		}

	}

	&-evenly {

		@include breakpoint($prefix: '-', $suffix: '') {
			justify-content: space-evenly;
		}

	}

	&-stretch {

		@include breakpoint($prefix: '-', $suffix: '') {
			align-items: stretch;
		}

	}

	&-equal-column-height {

		@include breakpoint($prefix: '-', $suffix: '') {
			flex-direction: column;
			//align-items: stretch;
			justify-content: space-between;
			height: 100%;
		}

	}

}

.flex-self {

	//flex: 0 1 100%; // flex-grow, flex-shrink, flex-basis

	&-baseline {

		@include breakpoint($prefix: '-', $suffix: '') {
			align-self: baseline;
		}

	}

	&-top {

		@include breakpoint($prefix: '-', $suffix: '') {
			align-self: flex-start;
		}

	}

	&-bottom {

		@include breakpoint($prefix: '-', $suffix: '') {
			align-self: flex-end;
		}

	}

	&-v {

		@include breakpoint($prefix: '-', $suffix: '') {
			align-self: center;
		}

	}

	&-expand {

		@include breakpoint($prefix: '-', $suffix: '') {
			flex: 1 100%;
		}

	}

	&-grow {

		@include breakpoint($prefix: '-', $suffix: '') {
			flex: 1;
		}

	}

	&-shrink {

		@include breakpoint($prefix: '-', $suffix: '') {
			flex: 0 auto;
		}

	}

}


/* -------------------------------------------------- */
/* BACKGROUND
/* -------------------------------------------------- */

.background {

	width: 100%;
	height: 100%;
	//background: $primary url(../assets/icon.png) no-repeat fixed center center;


	// POSITION
	@each $name, $direction in $directions {

		&-#{$name} {

			@include breakpoint($prefix: '-', $suffix: '') {
				background-position: unquote($direction);
			}

		}

	}


	// PROPERTIES
	&-auto {

		@include breakpoint($prefix: '-', $suffix: '') {
			background-size: auto;
		}

	}

	&-contain {

		@include breakpoint($prefix: '-', $suffix: '') {
			background-size: contain;
		}

	}

	&-cover {

		@include breakpoint($prefix: '-', $suffix: '') {
			background-size: cover;
		}

	}

	&-clip-border-box {

		@include breakpoint($prefix: '-', $suffix: '') {
			background-clip: border-box;
		}

	}

	&-clip-content-box {

		@include breakpoint($prefix: '-', $suffix: '') {
			background-clip: content-box;
		}

	}

	&-clip-padding-box {

		@include breakpoint($prefix: '-', $suffix: '') {
			background-clip: padding-box;
		}

	}

	&-clip-text {

		@include breakpoint($prefix: '-', $suffix: '') {
			color: transparent;
			background-clip: text;
		}

	}

	&-origin-border-box {

		@include breakpoint($prefix: '-', $suffix: '') {
			background-origin: border-box;
		}

	}

	&-origin-content-box {

		@include breakpoint($prefix: '-', $suffix: '') {
			background-origin: content-box;
		}

	}

	&-origin-padding-box {

		@include breakpoint($prefix: '-', $suffix: '') {
			background-origin: padding-box;
		}

	}

	&-repeat {

		@include breakpoint($prefix: '-', $suffix: '') {
			background-repeat: repeat;
		}

	}

	&-repeat-x { // -

		@include breakpoint($prefix: '-', $suffix: '') {
			background-repeat: repeat-x;
		}

	}

	&-repeat-y { // |

		@include breakpoint($prefix: '-', $suffix: '') {
			background-repeat: repeat-y;
		}

	}

	&-no-repeat {

		@include breakpoint($prefix: '-', $suffix: '') {
			background-repeat: no-repeat;
		}

	}

	&-fixed {

		@include breakpoint($prefix: '-', $suffix: '') {
			background-attachment: fixed;
		}

	}

	&-local {

		@include breakpoint($prefix: '-', $suffix: '') {
			background-attachment: local;
		}

	}

	&-scroll {

		@include breakpoint($prefix: '-', $suffix: '') {
			background-attachment: scroll;
		}

	}

	&-color-none {

		@include breakpoint($prefix: '-', $suffix: '') {
			background-color: transparent;
		}

	}

	&-image-none {

		@include breakpoint($prefix: '-', $suffix: '') {
			background-image: none;
		}

	}

	&-none {

		@include breakpoint($prefix: '-', $suffix: '') {
			background: {
				color: transparent;
				image: none;
			}
		}

	}

}


/* -------------------------------------------------- */
/* OBJECT FIT
/* -------------------------------------------------- */

.object {

	// POSITION
	@each $name, $direction in $directions {

		&-#{$name} {

			@include breakpoint($prefix: '-', $suffix: '') {
				object-position: unquote($direction);
			}

		}

	}


	// PROPERTIES
	&-contain { 

		@include breakpoint($prefix: '-', $suffix: '') {
			object-fit: contain;
		}

	}

	&-cover {

		@include breakpoint($prefix: '-', $suffix: '') {
			object-fit: cover;
		}

	}

	&-fill {

		@include breakpoint($prefix: '-', $suffix: '') {
			object-fit: fill;
		}

	}

	&-none {

		@include breakpoint($prefix: '-', $suffix: '') {
			object-fit: none;
		}

	}

	&-scale-down {

		@include breakpoint($prefix: '-', $suffix: '') {
			object-fit: scale-down;
		}

	}

}


/* -------------------------------------------------- */
/* BORDER RADIUS
/* -------------------------------------------------- */

.round {

	@each $name, $amount in $amounts {

		&-#{$name} {

			@include breakpoint($prefix: '-', $suffix: '') {

				border: {
					radius: pxtoem($amount);
				}

				&-hover:hover,
				&-focus:focus {
					border: {
						radius: pxtoem($amount);
					}
				}

			}

		}

		&-full {

			@include breakpoint($prefix: '-', $suffix: '') {

				border: {
					radius: 50%;
				}

				&-hover:hover,
				&-focus:focus {
					border: {
						radius: 50%;
					}
				}

			}

		}

	}

	@each $name, $direction in $directions {

		&-#{$name} {

			@include breakpoint($prefix: '-', $suffix: '') {

				@if $direction == 'top' {

					border: {
						//top-left-radius: 0;
						//top-right-radius: 0;
						bottom-left-radius: 0;
						bottom-right-radius: 0;
					}

				}

				@else if $direction == 'right' {

					border: {
						top-left-radius: 0;
						//top-right-radius: 0;
						bottom-left-radius: 0;
						//bottom-right-radius: 0;
					}

				}

				@else if $direction == 'bottom' {

					border: {
						top-left-radius: 0;
						top-right-radius: 0;
						//bottom-left-radius: 0;
						//bottom-right-radius: 0;
					}

				}

				@else if $direction == 'left' {

					border: {
						//top-left-radius: 0;
						top-right-radius: 0;
						//bottom-left-radius: 0;
						bottom-right-radius: 0;
					}

				}

			}

		}

	}

	&-top-none {

		@include breakpoint($prefix: '-', $suffix: '') {
			border: {
				top-left-radius: 0;
				top-right-radius: 0;
				//bottom-left-radius: 0;
				//bottom-right-radius: 0;
			}
		}
		
	}

	&-right-none {

		@include breakpoint($prefix: '-', $suffix: '') {
			border: {
				//top-left-radius: 0;
				top-right-radius: 0;
				//bottom-left-radius: 0;
				bottom-right-radius: 0;
			}
		}

	}

	&-bottom-none {

		@include breakpoint($prefix: '-', $suffix: '') {
			border: {
				//top-left-radius: 0;
				//top-right-radius: 0;
				bottom-left-radius: 0;
				bottom-right-radius: 0;
			}

		}

	}

	&-left-none {

		@include breakpoint($prefix: '-', $suffix: '') {
			border: {
				top-left-radius: 0;
				//top-right-radius: 0;
				bottom-left-radius: 0;
				//bottom-right-radius: 0;
			}
		}

	}

}


/* -------------------------------------------------- */
/* STACK ORDER (Z-INDEX)
/* -------------------------------------------------- */

@for $i from 0 through 10 {

	.z-#{$i} {

		@include breakpoint($prefix: '-', $suffix: '') {
			z-index: $i;
		}

	}

}

.bring-to-front {

	@include breakpoint($prefix: '-', $suffix: '') {
		z-index: 9999;
	}

}

.send-to-back {

	@include breakpoint($prefix: '-', $suffix: '') {
		z-index: -1;
	}

}


/* -------------------------------------------------- */
/* DISABLED
/* -------------------------------------------------- */

.no {

	&-pointer {

		@include breakpoint($prefix: '-', $suffix: '') {
			cursor: pointer;
			pointer-events: none;
		}

	}

	&-selection {

		@include breakpoint($prefix: '-', $suffix: '') {
			user-select: none;
		}

	}

	&-scroll {

		@include breakpoint($prefix: '-', $suffix: '') {
			overflow: {
				x: hidden;
				y: hidden;
			}
		}

	}

	&-scrollbar {

		@include breakpoint($prefix: '-', $suffix: '') {
			-ms-overflow-style: none;
		}

		@include breakpoint($prefix: '-', $suffix: '::-webkit-scrollbar') {
			display: none;
		}

	}

	&-touch-callout {

		@include breakpoint($prefix: '-', $suffix: '') {
			-webkit-touch-callout: none;
			-moz-touch-callout: none;
			-ms-user-touch-callout: none;
			touch-callout: none;
		}

	}
	
	&-touch-scroll {

		@include breakpoint($prefix: '-', $suffix: '') {
			-webkit-overflow-scrolling: auto;
		}

	}

	&-transition {

		@include breakpoint($prefix: '-', $suffix: '') {
			transition-duration: 0 !important;
		}

	}

}
